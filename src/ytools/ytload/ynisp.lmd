;-*- Mode: Common-lisp; Package: ytools; Readtable: ytools; -*-
(in-package :ytools)
;;;$Id: ynisp.lmd,v 1.13 2005/12/30 19:32:49 dvm Exp $

;;; Copyright (C) 1976-2003 
;;;     Drew McDermott and Yale University.  All rights reserved
;;; This software is released under the terms of the Modified BSD
;;; License.  See file COPYING for details.

(declare-config-var ynisp-home-dir*)
(declare-config-var ynisp-bin-dir*)

;(declare-config-var nisp-installed*)
;(declare-config-var lisp-newfangled*)
;;;;(declare-config-var host-sys*)
;;;;(declare-config-var lisp-source-extn*)
;;;;(declare-config-var lisp-object-extn*)
;;;;(declare-config-var filename-case*)
;;;;(declare-config-var fload-compile*)
;;;;(declare-config-var nisp-bin-relative*)

(defmacro ynisp-load (pkg dir file)
   `(let ((*package* (find-package ,(string pkg))))
       (with-fload-abort
	 (intern-call ytools do-fload (list ',dir ',file)))))

;;;;(declare-config-var prenils-compiled*)

(defun install-ynisp (sto)
   (cond ((yt-load :ytools :if-loaded nil :if-not-installed ':install)
	  (set-config-var ynisp-home-dir* sto
		(prompt-for-dir-name  "Type the directory YNisp resides in (probably ends with 'ydecl'): "))
	  (set-config-var ynisp-bin-dir* sto
	        (prompt-for-dir-name
		   "Type the directory for YNisp bin files (absolute or relative): "))
	  (install-ynisp-after-queries))))

(defun install-ynisp-after-queries ()
   (load-yt-config-file)
   (let (#+pre-chunk (fload-compile* ':compile)
         #-pre-chunk (fload-compile-flag* ':compile))
      (load (strings-concat ynisp-home-dir* "ydecl.lsy"))
      (let ((*readtable* ytools-readtable*))
         (with-compilation-unit ()
            (ynisp-load :ydecl "%ydecl/" compnisp))
         ;;;;(ynisp-load :ydecl "%ydecl/" nisptest)
         (dump-yt-config-file)
         (format t "YNisp is installed.~%")
         (better-restart-message))))
	    
(defun load-ynisp ()
   (cond ((yt-load :ytools :if-loaded nil :if-not-installed ':install)
	  (load (strings-concat ynisp-home-dir* "ydecl.lsy"))
	  (let ((*readtable* ytools-readtable*))
	     (ynisp-load :ydecl "%ydecl/" runnisp)
	     (format t "YNisp is loaded.~%")
	     (list (find-package :nisp)
		   ytools-readtable*)))))

